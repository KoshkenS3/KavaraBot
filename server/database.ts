import { Pool } from "pg";
import dotenv from "dotenv";
dotenv.config();

let pool: Pool | null = null;

export async function initializeDatabase() {
  if (!process.env.DATABASE_URL) {
    throw new Error("DATABASE_URL is required");
  }

  pool = new Pool({
    connectionString: process.env.DATABASE_URL,
  });

  try {
    await pool.query("SELECT 1");
    console.log("Database connected successfully");
    
    await createTables();
    await seedDatabase();
  } catch (error) {
    console.error("Database connection failed:", error);
    throw error;
  }
}

export function getPool(): Pool {
  if (!pool) {
    throw new Error("Database not initialized");
  }
  return pool;
}

async function createTables() {
  const client = pool!;
  
  await client.query(`
    CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
  `);

  await client.query(`
    CREATE TABLE IF NOT EXISTS users (
      id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
      created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
      telegram_id TEXT UNIQUE,
      username TEXT,
      first_name TEXT,
      last_name TEXT
    );
  `);

  await client.query(`
    CREATE TABLE IF NOT EXISTS quiz_responses (
      id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
      created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
      user_id UUID REFERENCES users(id),
      size TEXT,
      height TEXT,
      weight TEXT,
      goals TEXT[],
      budget TEXT
    );
  `);

  await client.query(`
    CREATE TABLE IF NOT EXISTS boxes (
      id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
      created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
      name TEXT NOT NULL,
      description TEXT,
      price INTEGER NOT NULL,
      image_url TEXT,
      contents TEXT[],
      category TEXT,
      emoji TEXT,
      is_available BOOLEAN DEFAULT true
    );
  `);

  await client.query(`
    CREATE TABLE IF NOT EXISTS orders (
      id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
      order_number TEXT UNIQUE NOT NULL,
      created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
      user_id UUID REFERENCES users(id),
      box_id UUID REFERENCES boxes(id),
      customer_name TEXT NOT NULL,
      customer_phone TEXT NOT NULL,
      customer_email TEXT,
      delivery_method TEXT NOT NULL,
      payment_method TEXT NOT NULL,
      total_price INTEGER NOT NULL,
      status TEXT DEFAULT 'pending'
    );
  `);

  await client.query(`
    CREATE TABLE IF NOT EXISTS notifications (
      id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
      created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
      user_id UUID NOT NULL REFERENCES users(id),
      box_id UUID NOT NULL REFERENCES boxes(id)
    );
  `);

  console.log("Database tables created successfully");
}

async function seedDatabase() {
  const client = pool!;
  
  const { rows } = await client.query("SELECT COUNT(*) FROM boxes");
  if (parseInt(rows[0].count) > 0) {
    console.log("Database already seeded");
    return;
  }

  const boxes = [
    {
      name: "–§–ò–¢–ù–ï–° –ö–û–ú–ü–õ–ï–ö–¢",
      description: "–ü–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –≤ —Å–ø–æ—Ä—Ç–∑–∞–ª–µ",
      price: 8990,
      image_url: "https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b",
      contents: ["–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞ KAVARA", "–®–æ—Ä—Ç—ã –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫", "–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –Ω–æ—Å–∫–∏", "–ü–æ–ª–æ—Ç–µ–Ω—Ü–µ"],
      category: "ready",
      emoji: "üí™",
      is_available: true,
    },
    {
      name: "–ë–ï–ì–û–í–û–ô –ù–ê–ë–û–†",
      description: "–õ–µ–≥–∫–∞—è –∏ –¥—ã—à–∞—â–∞—è –æ–¥–µ–∂–¥–∞ –¥–ª—è –±–µ–≥–∞",
      price: 7490,
      image_url: "https://images.unsplash.com/photo-1506629905877-c1e5027f5b6c",
      contents: ["–ë–µ–≥–æ–≤–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞", "–ë–µ–≥–æ–≤—ã–µ —à–æ—Ä—Ç—ã", "–ö–æ–º–ø—Ä–µ—Å—Å–∏–æ–Ω–Ω—ã–µ –≥–µ—Ç—Ä—ã"],
      category: "ready",
      emoji: "üèÉ‚Äç‚ôÇÔ∏è",
      is_available: true,
    },
    {
      name: "–ô–û–ì–ê –°–¢–ò–õ–¨",
      description: "–ö–æ–º—Ñ–æ—Ä—Ç–Ω–∞—è –æ–¥–µ–∂–¥–∞ –¥–ª—è –π–æ–≥–∏ –∏ —Ä–∞—Å—Ç—è–∂–∫–∏",
      price: 6990,
      image_url: "https://images.unsplash.com/photo-1544966503-7cc5ac882d5a",
      contents: ["–¢–æ–ø –¥–ª—è –π–æ–≥–∏", "–õ–µ–≥–≥–∏–Ω—Å—ã", "–ö–æ–≤—Ä–∏–∫ –¥–ª—è –π–æ–≥–∏"],
      category: "ready",
      emoji: "üßò‚Äç‚ôÄÔ∏è",
      is_available: true,
    },
    {
      name: "–ü–†–ï–ú–ò–£–ú –°–ü–û–†–¢",
      description: "–≠–ª–∏—Ç–Ω–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–æ–≤",
      price: 15990,
      image_url: "https://images.unsplash.com/photo-1517838277536-f5f99be501cd",
      contents: ["–ü—Ä–µ–º–∏—É–º —Ñ—É—Ç–±–æ–ª–∫–∞", "–ö–æ–º–ø—Ä–µ—Å—Å–∏–æ–Ω–Ω—ã–µ —à–æ—Ä—Ç—ã", "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã"],
      category: "ready",
      emoji: "‚≠ê",
      is_available: false,
    },
    {
      name: "–ó–ò–ú–ù–ò–ô –°–ü–û–†–¢",
      description: "–¢–µ–ø–ª–∞—è —Å–ø–æ—Ä—Ç–∏–≤–Ω–∞—è –æ–¥–µ–∂–¥–∞ –¥–ª—è —Ö–æ–ª–æ–¥–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –≥–æ–¥–∞",
      price: 11990,
      image_url: "https://images.unsplash.com/photo-1594736797933-d0b22ce8cd6c",
      contents: ["–£—Ç–µ–ø–ª–µ–Ω–Ω–∞—è –∫—É—Ä—Ç–∫–∞", "–¢–µ—Ä–º–æ–±–µ–ª—å–µ", "–ó–∏–º–Ω–∏–µ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã"],
      category: "ready",
      emoji: "‚ùÑÔ∏è",
      is_available: false,
    },
    // Personal boxes
    {
      name: "–°–ò–õ–û–í–´–ï –¢–†–ï–ù–ò–†–û–í–ö–ò",
      description: "–ö–æ–º–ø–ª–µ–∫—Ç –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ —Å –∂–µ–ª–µ–∑–æ–º",
      price: 9990,
      image_url: "https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b",
      contents: ["–ö–æ–º–ø—Ä–µ—Å—Å–∏–æ–Ω–Ω–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞", "–®–æ—Ä—Ç—ã –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫", "–ü–µ—Ä—á–∞—Ç–∫–∏ –¥–ª—è –∑–∞–ª–∞"],
      category: "personal",
      emoji: "üèãÔ∏è‚Äç‚ôÇÔ∏è",
      is_available: true,
    },
    {
      name: "–ö–ê–†–î–ò–û –ú–ò–ö–°",
      description: "–õ–µ–≥–∫–∞—è –æ–¥–µ–∂–¥–∞ –¥–ª—è –∫–∞—Ä–¥–∏–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫",
      price: 8490,
      image_url: "https://images.unsplash.com/photo-1506629905877-c1e5027f5b6c",
      contents: ["–î—ã—à–∞—â–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞", "–õ–µ–≥–∫–∏–µ —à–æ—Ä—Ç—ã", "–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –∫—Ä–æ—Å—Å–æ–≤–∫–∏"],
      category: "personal",
      emoji: "üèÉ‚Äç‚ôÄÔ∏è",
      is_available: true,
    },
    {
      name: "–ê–ö–¢–ò–í–ù–´–ô –°–¢–ò–õ–¨",
      description: "–°—Ç–∏–ª—å–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Ç –¥–ª—è –±–µ–≥–∞ –∏ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –æ–±—Ä–∞–∑–∞ –∂–∏–∑–Ω–∏",
      price: 7490,
      image_url: "https://images.unsplash.com/photo-1506629905877-c1e5027f5b6c",
      contents: ["–ë–µ–≥–æ–≤–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞", "–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ —à–æ—Ä—Ç—ã", "–ë–µ–≥–æ–≤—ã–µ –∫—Ä–æ—Å—Å–æ–≤–∫–∏"],
      category: "personal",
      emoji: "üèÉ‚Äç‚ôÇÔ∏è",
      is_available: true,
    },
    {
      name: "–ü–†–ï–ú–ò–£–ú –§–ò–¢–ù–ï–°",
      description: "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –Ω–∞–±–æ—Ä –∏–∑ –ø—Ä–µ–º–∏–∞–ª—å–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤",
      price: 12990,
      image_url: "https://images.unsplash.com/photo-1544966503-7cc5ac882d5a",
      contents: ["–ö–æ–º–ø—Ä–µ—Å—Å–∏–æ–Ω–Ω—ã–π —Ç–æ–ø", "–ü—Ä–µ–º–∏—É–º –ª–µ–≥–≥–∏–Ω—Å—ã", "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∫—Ä–æ—Å—Å–æ–≤–∫–∏"],
      category: "personal",
      emoji: "‚≠ê",
      is_available: true,
    },
  ];

  for (const box of boxes) {
    await client.query(
      `INSERT INTO boxes (name, description, price, image_url, contents, category, emoji, is_available)
       VALUES ($1, $2, $3, $4, $5, $6, $7, $8)`,
      [box.name, box.description, box.price, box.image_url, box.contents, box.category, box.emoji, box.is_available]
    );
  }

  console.log("Database seeded with initial boxes");
}